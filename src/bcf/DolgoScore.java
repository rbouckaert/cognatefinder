package bcf;

import beast.core.Description;

@Description("DOLGO Sound-Class Model "
		+ "Sound-Class model based on Dolgopolsky (1986) "
		+ "Sourced from lingpy/data/models/dolgo.")
public class DolgoScore extends Score {

	public DolgoScore() {	
		/* V */ process(12," a, ᴀ, ã, ɑ, á, à, ā, ǎ, ụ, ū, â, ɛ, æ, ɜ, ɐ, ʌ, e, ᴇ, ə, ẽ, ɘ, ɤ, è, é, ē, ě, ê, ɚ, Œ, ɒ, œ, ɞ, ɔ, ø, ɵ, o, õ, ó, ò, ō, ô, y, ṳ, ʏ, ʉ, u, ᴜ, ʊ, i, ɪ, ɨ, ɿ, ʅ, ɯ, ĩ, í, ǐ, ì, î, ī, ɶ, ɷ, ı, ǝ, ǒ, ĭ, ŏ, ẽ, ä, ö, ǒ, ĭ, ŏ, ŭ, ў, ă, ĕ, ü, ú, ũ, ṵ, ʮ, ɩ, ỹ, ε, ù, е, ï, ǔ, ạ, ụ, ọ, ỳ, ȯ, û, а, ę, û, ị, ý, å, ǫ, ë, ạ, ḭ, ḛ, ๅ, ố, ў, ȇ, ȗ, ᴇ, ε, ṍ, ṹ, ṳ, ŷ, ʯ");
		/* K */ process(5," t͡s, t͜s, d͡z, d͜z, ʦ, ʣ, t͡ɕ, t͜ɕ, d͡ʑ, d͜ʑ, ʨ, ʥ, t͡ʃ, ʄ, t͜ʃ, tʃ, d͡ʒ, d͜ʒ, ʧ, ʤ, c, ɟ, t͡ʂ, t͜ʂ, d͡ʐ, d͜ʐ, č, t͡θ, t͜θ, k, g, q, ɢ, ɡ, x, ɣ, χ, ǰ, ĵ, ḳ, ǥ, ǵ, ḡ, t͡ʂ, Ɉ, ʈʂ, ɖʐ, ʈʂʰ, tɕ, tɕʰ, dʑ, ts, dz, tsʰ, ǃ, ǂ, ǁ, ǀ, ʘ, gǃ, gǂ, gǁ, gǀ, gʘ, ǃŋ, ǂŋ, ǁŋ, ǀŋ, ʘŋ, !, |, g!, g|, !ŋ, |ŋ, ɠ, ʛ");
		/* P */ process(8," ɸ, β, f, p͡f, p͜f, ƀ, p, b, ɓ, р, ᵐb, ᵐp, ḇ, bv, b͡v, pf");
		/* H */ process(3," ʔ, ħ, ʕ, h, ɦ, ḥ, Ɂ, ʡ, 'ʷ");
		/* J */ process(4," j, ɥ, ɰ");
		/* M */ process(6," m, ɱ, ʍ, ṃ");
		/* N */ process(7," n, ȵ, ɳ, ŋ, ɴ, ň, ń, ɲ, ∼, ṇ, ñ, ῃ, ņ, ṋ, ɴ, ᶇ");
		/* S */ process(10," s, z, ∫, ʃ, ʒ, ʂ, ʐ, ç, ʝ, š, ž, ɕ, ʑ, ɧ, ś, ṣ, ß, ŝ, ż, ẓ, ᶊ, ʆ, ᶎ");
		/* R */ process(9," ɹ, ɻ, ʀ, ɐ̯, ɾ, r, ʁ, ɽ, l, ȴ, l, ɭ, ʎ, ʟ, ɬ, ɮ, ɫ, ł, ɺ, ḷ, ṛ́, ṛ, ļ, ᵲ, ř, ȓ, ṙ, ᶉ, ᶅ");
		/* T */ process(11," t, d, ȶ, ȡ, ɗ, ʈ, ɖ, θ, ð, ŧ, þ, đ, т, ṱ, ṭ, ḍ, ḏ, ţ, Ɵ, ᶁ, ƫ");
		/* W */ process(13," w, ʋ, v, ʙ, ⱱ, ṿ, ṽ, υ");
		/* + */ process(0," x");
		/* 1 */ process(2," ₁₁, ₂₂, ¹¹, ²², ₁₂, ₁₃, ₁₄, ₁₅, ₂₃, ₂₄, ₂₅, ₃₄, ₃₅, ₄₅, ¹², ¹³, ¹⁴, ¹⁵, ²³, ²⁴, ²⁵, ³⁵, ³⁴, ⁴⁵, ₅₁, ₅₂, ₅₃, ₅₄, ₄₃, ₄₂, ₄₁, ₃₂, ₃₁, ₂₁, ⁵¹, ⁵², ⁵³, ⁵⁴, ⁴¹, ⁴², ⁴³, ³¹, ³², ²¹, ₃₃, ³³, ₄₄, ₅₅, ⁵⁵, ⁴⁴, ⁰, ¹, ², ³, ⁴, ⁵, ⁻, ₁, ₂, ₃, ₄, ₅, ₆, ₀, ˥, ˦, ˨, ˧");
		/* _ */ process(15," _, #, ◦, ·, -, +");
	setScore(new double[][] {
		/* +	0*/ {1000.00, -1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000., -1000.},
		/* 0	1*/ {-1000., 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00},
		/* 1	2*/ {-1000., 0.00, 2.00, -20.00, -20.00, -20.00, -20.00, -20.00, -20.00, -20.00, -20.00, -20.00, -20.00, -20.00, 0.00, -20.00},
		/* H	3*/ {-1000., 0.00, -20.00, 10.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -10.00, 0.00, 0.00, -20.00},
		/* J	4*/ {-1000., 0.00, -20.00, 0.00, 10.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -10.00, 0.00, 0.00, -20.00},
		/* K	5*/ {-1000., 0.00, -20.00, 0.00, 0.00, 10.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -10.00, 0.00, 0.00, -20.00},
		/* M	6*/ {-1000., 0.00, -20.00, 0.00, 0.00, 0.00, 10.00, 0.00, 0.00, 0.00, 0.00, 0.00, -10.00, 0.00, 0.00, -20.00},
		/* N	7*/ {-1000., 0.00, -20.00, 0.00, 0.00, 0.00, 0.00, 10.00, 0.00, 0.00, 0.00, 0.00, -10.00, 0.00, 0.00, -20.00},
		/* P	8*/ {-1000., 0.00, -20.00, 0.00, 0.00, 0.00, 0.00, 0.00, 10.00, 0.00, 0.00, 0.00, -10.00, 0.00, 0.00, -20.00},
		/* R	9*/ {-1000., 0.00, -20.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 10.00, 0.00, 0.00, -10.00, 0.00, 0.00, -20.00},
		/* S	10*/ {-1000., 0.00, -20.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 10.00, 0.00, -10.00, 0.00, 0.00, -20.00},
		/* T	11*/ {-1000., 0.00, -20.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 10.00, -10.00, 0.00, 0.00, -20.00},
		/* V	12*/ {-1000., 0.00, -20.00, -10.00, -10.00, -10.00, -10.00, -10.00, -10.00, -10.00, -10.00, -10.00, 5.00, -10.00, 0.00, -20.00},
		/* W	13*/ {-1000., 0.00, -20.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -10.00, 10.00, 0.00, -20.00},
		/* X	14*/ {-1000., 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00},
		/* _	15*/ {-1000., 0.00, -20.00, -20.00, -20.00, -20.00, -20.00, -20.00, -20.00, -20.00, -20.00, -20.00, -20.00, -20.00, 0.00, 0.00},
		});
	}

}
